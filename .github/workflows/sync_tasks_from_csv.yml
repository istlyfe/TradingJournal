name: Sync tasks from CSV

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/trade_journal_tasks.csv'
  schedule:
    - cron: '0 9 * * 1' # Every Monday 09:00 UTC

permissions:
  contents: read
  issues: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        run: |
          git clone https://github.com/${{ github.repository }} .
          git checkout ${{ github.sha }}

      - name: Create or update issues from CSV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          # Check if CSV file exists
          if [ ! -f ".github/workflows/trade_journal_tasks.csv" ]; then
            echo "CSV file not found"
            exit 1
          fi

          # Read CSV and create issues using GitHub CLI (pre-installed on runners)
          echo "Processing CSV file..."
          
          # Skip header line and process each task
          tail -n +2 .github/workflows/trade_journal_tasks.csv | while IFS=',' read -r title note labels due_date; do
            # Skip empty lines or comments
            if [[ -z "$title" || "$title" == \#* ]]; then
              continue
            fi
            
            # Clean up the fields
            title=$(echo "$title" | xargs)
            note=$(echo "$note" | xargs)
            labels=$(echo "$labels" | xargs)
            due_date=$(echo "$due_date" | xargs)
            
            # Skip if title is empty
            if [[ -z "$title" ]]; then
              continue
            fi
            
            echo "Processing: $title"
            
            # Build labels array
            label_args=""
            if [[ -n "$labels" ]]; then
              # Split labels by space and add each as a label
              for label in $labels; do
                label_args="$label_args --label \"$label\""
              done
            fi
            
            # Add due date as label if present
            if [[ -n "$due_date" ]]; then
              label_args="$label_args --label \"due:$due_date\""
            fi
            
            # Build body
            body=""
            if [[ -n "$note" ]]; then
              body="$note"
            fi
            if [[ -n "$due_date" ]]; then
              if [[ -n "$body" ]]; then
                body="$body\n\n"
              fi
              body="${body}Due Date: $due_date"
            fi
            
            # Check if issue already exists
            existing_issue=$(gh issue list --search "\"$title\" in:title" --json number,title --jq ".[] | select(.title == \"$title\") | .number" || echo "")
            
            if [[ -n "$existing_issue" ]]; then
              echo "Updating existing issue #$existing_issue"
              if [[ -n "$body" ]]; then
                echo -e "$body" | gh issue edit "$existing_issue" --body-file -
              fi
              # Note: GitHub CLI doesn't support updating labels easily, so we skip label updates for existing issues
            else
              echo "Creating new issue"
              if [[ -n "$body" ]]; then
                echo -e "$body" | gh issue create --title "$title" --body-file - $label_args
              else
                gh issue create --title "$title" $label_args
              fi
            fi
            
          done
